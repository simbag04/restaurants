(()=>{"use strict";var n={28:(n,e,t)=>{t.d(e,{Z:()=>c});var a=t(537),r=t.n(a),o=t(645),i=t.n(o)()(r());i.push([n.id,":root\n{\n    --header: #B2B1CF;\n    --background: #E1F2FE;\n    --other: #98D2EB;\n}\nbody\n{\n    margin: 0;\n    padding: 0;\n    background-color: var(--background);\n}\n.nav-bar\n{\n    background-color: var(--header);\n    display: flex;\n    gap: 20px;\n    padding: 40px;\n    align-items: center;\n}\n\n.nav-bar p\n{\n    font-size: 40px;\n    font-weight: bold;\n    margin: 0;\n}\n\n.nav-bar .right \n{\n    display: flex;\n    gap: 20px;\n    justify-content: end;\n    flex-grow: 1;\n}\n\n#content\n{\n    padding: 40px 200px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.home\n{\n    text-align: center;\n    background-color: var(--other);\n    padding: 30px;\n}\n\nimg\n{\n    width: 400px;\n    height: auto;\n}\n\nbutton{\n    padding: 10px 20px;\n    background-color: var(--background);\n    border: none;\n    border-radius: 10px;\n}\n\nbutton:hover{\n    box-shadow: 0px 0px 10px black;\n}\n\n.menu-item\n{\n    background-color: var(--other);\n    padding: 40px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n}\n\n.menu-item p \n{\n    padding: 0px;\n    text-align: center;\n}\n\n.location-card\n{\n    background-color: var(--other);\n    padding: 20px;\n}\n\n.locations\n{\n    display: flex;\n    gap: 20px;\n    justify-content: center;\n}\n\n.menus\n{\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n    gap: 20px;\n    justify-items: center;\n}\n\n.home, .location-card, .menu-item\n{\n    border-radius: 10px;\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;;IAEI,iBAAiB;IACjB,qBAAqB;IACrB,gBAAgB;AACpB;AACA;;IAEI,SAAS;IACT,UAAU;IACV,mCAAmC;AACvC;AACA;;IAEI,+BAA+B;IAC/B,aAAa;IACb,SAAS;IACT,aAAa;IACb,mBAAmB;AACvB;;AAEA;;IAEI,eAAe;IACf,iBAAiB;IACjB,SAAS;AACb;;AAEA;;IAEI,aAAa;IACb,SAAS;IACT,oBAAoB;IACpB,YAAY;AAChB;;AAEA;;IAEI,mBAAmB;IACnB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;;IAEI,kBAAkB;IAClB,8BAA8B;IAC9B,aAAa;AACjB;;AAEA;;IAEI,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,mCAAmC;IACnC,YAAY;IACZ,mBAAmB;AACvB;;AAEA;IACI,8BAA8B;AAClC;;AAEA;;IAEI,8BAA8B;IAC9B,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,mBAAmB;;AAEvB;;AAEA;;IAEI,YAAY;IACZ,kBAAkB;AACtB;;AAEA;;IAEI,8BAA8B;IAC9B,aAAa;AACjB;;AAEA;;IAEI,aAAa;IACb,SAAS;IACT,uBAAuB;AAC3B;;AAEA;;IAEI,aAAa;IACb,4DAA4D;IAC5D,SAAS;IACT,qBAAqB;AACzB;;AAEA;;IAEI,mBAAmB;AACvB",sourcesContent:[":root\n{\n    --header: #B2B1CF;\n    --background: #E1F2FE;\n    --other: #98D2EB;\n}\nbody\n{\n    margin: 0;\n    padding: 0;\n    background-color: var(--background);\n}\n.nav-bar\n{\n    background-color: var(--header);\n    display: flex;\n    gap: 20px;\n    padding: 40px;\n    align-items: center;\n}\n\n.nav-bar p\n{\n    font-size: 40px;\n    font-weight: bold;\n    margin: 0;\n}\n\n.nav-bar .right \n{\n    display: flex;\n    gap: 20px;\n    justify-content: end;\n    flex-grow: 1;\n}\n\n#content\n{\n    padding: 40px 200px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.home\n{\n    text-align: center;\n    background-color: var(--other);\n    padding: 30px;\n}\n\nimg\n{\n    width: 400px;\n    height: auto;\n}\n\nbutton{\n    padding: 10px 20px;\n    background-color: var(--background);\n    border: none;\n    border-radius: 10px;\n}\n\nbutton:hover{\n    box-shadow: 0px 0px 10px black;\n}\n\n.menu-item\n{\n    background-color: var(--other);\n    padding: 40px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n}\n\n.menu-item p \n{\n    padding: 0px;\n    text-align: center;\n}\n\n.location-card\n{\n    background-color: var(--other);\n    padding: 20px;\n}\n\n.locations\n{\n    display: flex;\n    gap: 20px;\n    justify-content: center;\n}\n\n.menus\n{\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n    gap: 20px;\n    justify-items: center;\n}\n\n.home, .location-card, .menu-item\n{\n    border-radius: 10px;\n}"],sourceRoot:""}]);const c=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",a=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),a&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),a&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,a,r,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(a)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(i[d]=!0)}for(var l=0;l<n.length;l++){var A=[].concat(n[l]);a&&i[A[0]]||(void 0!==o&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=o),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),r&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=r):A[4]="".concat(r)),e.push(A))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),o="/*# ".concat(r," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,a=0;a<e.length;a++)if(e[a].identifier===n){t=a;break}return t}function a(n,a){for(var o={},i=[],c=0;c<n.length;c++){var d=n[c],l=a.base?d[0]+a.base:d[0],A=o[l]||0,p="".concat(l," ").concat(A);o[l]=A+1;var s=t(p),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==s)e[s].references++,e[s].updater(u);else{var m=r(u,a);a.byIndex=c,e.splice(c,0,{identifier:p,updater:m,references:1})}i.push(p)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var o=a(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var c=t(o[i]);e[c].references--}for(var d=a(n,r),l=0;l<o.length;l++){var A=t(o[l]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}o=d}}},569:n=>{var e={};n.exports=function(n,t){var a=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,r&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(a,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(a){var r=e[a];if(void 0!==r)return r.exports;var o=e[a]={id:a,exports:{}};return n[a](o,o.exports,t),o.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var a in e)t.o(e,a)&&!t.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var a=e.getElementsByTagName("script");a.length&&(n=a[a.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{const n=t.p+"da24084dee0fbfca6a21.jpeg";function e(){let e=document.querySelector("#content");e.innerHTML="";let t=document.createElement("div");t.classList.add("home");let a=document.createElement("h1");a.textContent="Welcome to The French Bakery!";let r=new Image;r.src=n;let o=document.createElement("p");o.textContent="The French Bakery is a cozy cafe for families to enjoy coffee and pastries.",t.appendChild(a),t.appendChild(r),t.appendChild(o),e.appendChild(t)}const a=t.p+"14b641073637140b9c88.jpeg",r=t.p+"7897b89b5443547235d7.jpeg",o=t.p+"df4afae7b0648d065350.jpg";function i(n,e,t){let a=document.createElement("div");a.classList.add("menu-item");let r=new Image;r.src=n;let o=document.createElement("h2");o.textContent=e;let i=document.createElement("p");return i.textContent=t,a.appendChild(o),a.appendChild(r),a.appendChild(i),a}function c(n,e){let t=document.createElement("div");t.classList.add("location-card");let a=document.createElement("h4");a.textContent=n;let r=document.createElement("p");r.textContent=e;let o=document.createElement("div"),i=document.createElement("h4");i.textContent="Hours";let c=document.createElement("p");c.textContent="Mon - Sat: 7am - 7pm";let d=document.createElement("p");return d.textContent="Sunday: 7am - 6pm",o.appendChild(i),o.appendChild(c),o.appendChild(d),t.appendChild(a),t.appendChild(r),t.appendChild(o),t}var d=t(379),l=t.n(d),A=t(795),p=t.n(A),s=t(569),u=t.n(s),m=t(565),C=t.n(m),f=t(216),h=t.n(f),E=t(589),g=t.n(E),v=t(28),x={};x.styleTagTransform=g(),x.setAttributes=C(),x.insert=u().bind(null,"head"),x.domAPI=p(),x.insertStyleElement=h(),l()(v.Z,x),v.Z&&v.Z.locals&&v.Z.locals,function(){let n=document.querySelector("#main"),t=document.createElement("div");t.classList.add("nav-bar");let d=document.createElement("p");d.textContent="The French Bakery";let l=document.createElement("button"),A=document.createElement("button"),p=document.createElement("button");l.textContent="Home",l.addEventListener("click",(()=>{e()})),A.textContent="Menu",A.addEventListener("click",(()=>{!function(){let n=document.querySelector("#content");n.innerHTML="";let e=document.createElement("h1");e.textContent="Menu";let t=document.createElement("div");t.classList.add("menus"),t.appendChild(i(a,"Fresh Strawberry Cake","MOIST VANILLA CAKE LAYERED WITH FRESH STRAWBERRIES, HOUSE MADE WHIPPED CREAM & DECORATED WITH SLIVERED ALMONDS")),t.appendChild(i(r,"Dark Chocolate Mousse","DENSE CHOCOLATE CAKE, DARK CHOCOLATE CREAM TOPPED WITH WHIPPED CREAM & CHOCOLATE PIECES.")),t.appendChild(i(o,"Tiramisu","DARK CHOCOLATE CAKE, LAYERED WITH COFFEE CREAM. DECORATED WITH COCOA NIBS, WHIPPED CREAM AND CANDIED ESPRESSO BEANS.")),n.appendChild(e),n.appendChild(t)}()})),p.textContent="Contact",p.addEventListener("click",(()=>{!function(){let n=document.querySelector("#content");n.innerHTML="";let e=document.createElement("h1");e.textContent="Locations";let t=document.createElement("div");t.classList.add("locations"),t.appendChild(c("Crossroads Bellevue","15600 NE 8th St K-4 Bellevue, WA 98008 (425) 747-0557")),t.appendChild(c("Crossroads Bellevue","15600 NE 8th St K-4 Bellevue, WA 98008 (425) 747-0557")),t.appendChild(c("Crossroads Bellevue","15600 NE 8th St K-4 Bellevue, WA 98008 (425) 747-0557")),n.appendChild(e),n.appendChild(t)}()}));let s=document.createElement("div");s.classList.add("right"),t.appendChild(d),s.appendChild(l),s.appendChild(A),s.appendChild(p),t.appendChild(s),n.appendChild(t);let u=document.createElement("div");u.id="content",n.appendChild(u)}(),e()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,